BSDftpd-ssl project  <URL: http://bsdftpd-ssl.sc.ru/ >

            OpenSSL/BSDftpd-ssl cipher list format description

Author: Nick Leuta <skynick@mail.sc.ru>
23 November, 2003

This document is an adapted version of the ciphers(1) man page from the
OpenSSL 0.9.7 distribution.

CONTENTS
========
1. CIPHER LIST USAGE
2. CIPHER LIST FORMAT
3. CIPHER STRINGS
4. CIPHER SUITE NAMES
5. NOTES
6. EXAMPLES

1. CIPHER LIST USAGE
--------------------
The cipher list string should be universally usable and not depend on details
of the OpenSSL library configuration (ciphers compiled in). Thus no syntax
checking takes place. Items that are not recognized, because the corresponding
ciphers are not compiled in or because they are mistyped, are simply ignored.
Failure is only flagged if no ciphers could be collected at all.

It should be noted that inclusion of a cipher to be used into the list is
a necessary condition. On the client side, the inclusion into the list is
also sufficient. On the server side, additional restrictions apply. All ciphers
have additional requirements. ADH ciphers don't need a certificate, but
DH-parameters must have been set. All other ciphers need a corresponding
certificate and the key. A RSA cipher can only be chosen, when a RSA
certificate is available, the respective is valid for DSA ciphers. Ciphers
using EDH need a certificate, the key and DH-parameters.

2. CIPHER LIST FORMAT
---------------------
The cipher list consists of one or more cipher strings separated by colons.
Commas or spaces are also acceptable separators but colons are normally used.

The actual cipher string can take several different forms.

It can consist of a single cipher suite such as "RC4-SHA".

It can represent a list of cipher suites containing a certain algorithm, or
cipher suites of a certain type. For example "SHA1" represents all ciphers
suites using the digest algorithm SHA1 and "SSLv3" represents all SSL v3
algorithms.

Lists of cipher suites can be combined in a single cipher string using the
"+" character. It is used as the logical "and" operation. For example
"SHA1+DES" represents all cipher suites containing the SHA1 and the DES
algorithms.

Each cipher string can be optionally preceded by the characters "!",
"-" or "+".

If "!" is used then the ciphers are permanently deleted from the list.
The ciphers deleted can never reappear in the list even if they are
explicitly stated.

If "-" is used then the ciphers are deleted from the list, but some or
all of the ciphers can be added again by later options.

If "+" is used then the ciphers are moved to the end of the list. This
option doesn't add any new ciphers it just moves matching existing ones.

If none of these characters is present then the string is just interpreted
as a list of ciphers to be appended to the current preference list. If the
list includes any ciphers already present they will be ignored: that are they
will not moved to the end of the list.

Additionally the cipher string "@STRENGTH" can be used at any point to sort
the current cipher list in order of an encryption algorithm key length.

3. CIPHER STRINGS
-----------------
The following is a list of all permitted cipher strings and their meanings.

DEFAULT
   the default cipher list. This is determined at compile time and is normally
   "ALL:!ADH:RC4+RSA:+SSLv2:@STRENGTH". This must be the first cipher string
   specified.

ALL
   all ciphers suites except the "eNULL" ciphers which must be explicitly
   enabled.

HIGH
   "high" encryption cipher suites. This currently means those with key lengths
   larger than 128 bits.

MEDIUM
   "medium" encryption cipher suites, currently those using 128 bit encryption.

LOW
   "low" encryption cipher suites, currently those using 64 or 56 bit encryption
   algorithms but excluding export cipher suites.

EXP, EXPORT
   export encryption algorithms. Including 40 and 56 bits algorithms.

EXPORT40
   40 bit export encryption algorithms

EXPORT56
   56 bit export encryption algorithms.

eNULL, NULL
   the "NULL" ciphers that is those offering no encryption. Because these offer
   no encryption at all and are a security risk they are disabled unless
   explicitly included.

aNULL
   the cipher suites offering no authentication. This is currently the
   anonymous DH algorithms. These cipher suites are vulnerable to a "man in
   the middle" attack and so their use is normally discouraged.

kRSA, RSA
   cipher suites using RSA key exchange.

kEDH
   cipher suites using ephemeral DH key agreement.

kDHr, kDHd
   cipher suites using DH key agreement and DH certificates signed by CAs with
   RSA and DSS keys respectively. Not implemented.

aRSA
   cipher suites using RSA authentication, i.e. the certificates carry RSA keys.

aDSS, DSS
   cipher suites using DSS authentication, i.e. the certificates carry DSS keys.

aDH
   cipher suites effectively using DH authentication, i.e. the certificates
   carry DH keys. Not implemented.

kFZA, aFZA, eFZA, FZA
   ciphers suites using FORTEZZA key exchange, authentication, encryption or
   all FORTEZZA algorithms. Not implemented.

TLSv1, SSLv3, SSLv2
   TLS v1.0, SSL v3.0 or SSL v2.0 cipher suites respectively.

DH
   cipher suites using DH, including anonymous DH.

ADH
   anonymous DH cipher suites.

AES
   cipher suites using AES.

3DES
   cipher suites using triple DES.

DES
   cipher suites using DES (not triple DES).

RC4
   cipher suites using RC4.

RC2
   cipher suites using RC2.

IDEA
   cipher suites using IDEA.

MD5
   cipher suites using MD5.

SHA1, SHA
   cipher suites using SHA1.

4. CIPHER SUITE NAMES
---------------------
The following lists give the SSL or TLS cipher suites names from the
relevant specification and their OpenSSL equivalents.

SSL v3.0 cipher suites

 SSL_RSA_WITH_NULL_MD5                   NULL-MD5
 SSL_RSA_WITH_NULL_SHA                   NULL-SHA
 SSL_RSA_EXPORT_WITH_RC4_40_MD5          EXP-RC4-MD5
 SSL_RSA_WITH_RC4_128_MD5                RC4-MD5
 SSL_RSA_WITH_RC4_128_SHA                RC4-SHA
 SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5      EXP-RC2-CBC-MD5
 SSL_RSA_WITH_IDEA_CBC_SHA               IDEA-CBC-SHA
 SSL_RSA_EXPORT_WITH_DES40_CBC_SHA       EXP-DES-CBC-SHA
 SSL_RSA_WITH_DES_CBC_SHA                DES-CBC-SHA
 SSL_RSA_WITH_3DES_EDE_CBC_SHA           DES-CBC3-SHA

 SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA    Not implemented.
 SSL_DH_DSS_WITH_DES_CBC_SHA             Not implemented.
 SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA        Not implemented.
 SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA    Not implemented.
 SSL_DH_RSA_WITH_DES_CBC_SHA             Not implemented.
 SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA        Not implemented.
 SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA   EXP-EDH-DSS-DES-CBC-SHA
 SSL_DHE_DSS_WITH_DES_CBC_SHA            EDH-DSS-CBC-SHA
 SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA       EDH-DSS-DES-CBC3-SHA
 SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA   EXP-EDH-RSA-DES-CBC-SHA
 SSL_DHE_RSA_WITH_DES_CBC_SHA            EDH-RSA-DES-CBC-SHA
 SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA       EDH-RSA-DES-CBC3-SHA

 SSL_DH_anon_EXPORT_WITH_RC4_40_MD5      EXP-ADH-RC4-MD5
 SSL_DH_anon_WITH_RC4_128_MD5            ADH-RC4-MD5
 SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA   EXP-ADH-DES-CBC-SHA
 SSL_DH_anon_WITH_DES_CBC_SHA            ADH-DES-CBC-SHA
 SSL_DH_anon_WITH_3DES_EDE_CBC_SHA       ADH-DES-CBC3-SHA

 SSL_FORTEZZA_KEA_WITH_NULL_SHA          Not implemented.
 SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA  Not implemented.
 SSL_FORTEZZA_KEA_WITH_RC4_128_SHA       Not implemented.

TLS v1.0 cipher suites

 TLS_RSA_WITH_NULL_MD5                   NULL-MD5
 TLS_RSA_WITH_NULL_SHA                   NULL-SHA
 TLS_RSA_EXPORT_WITH_RC4_40_MD5          EXP-RC4-MD5
 TLS_RSA_WITH_RC4_128_MD5                RC4-MD5
 TLS_RSA_WITH_RC4_128_SHA                RC4-SHA
 TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5      EXP-RC2-CBC-MD5
 TLS_RSA_WITH_IDEA_CBC_SHA               IDEA-CBC-SHA
 TLS_RSA_EXPORT_WITH_DES40_CBC_SHA       EXP-DES-CBC-SHA
 TLS_RSA_WITH_DES_CBC_SHA                DES-CBC-SHA
 TLS_RSA_WITH_3DES_EDE_CBC_SHA           DES-CBC3-SHA

 TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA    Not implemented.
 TLS_DH_DSS_WITH_DES_CBC_SHA             Not implemented.
 TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA        Not implemented.
 TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA    Not implemented.
 TLS_DH_RSA_WITH_DES_CBC_SHA             Not implemented.
 TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA        Not implemented.
 TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA   EXP-EDH-DSS-DES-CBC-SHA
 TLS_DHE_DSS_WITH_DES_CBC_SHA            EDH-DSS-CBC-SHA
 TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA       EDH-DSS-DES-CBC3-SHA
 TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA   EXP-EDH-RSA-DES-CBC-SHA
 TLS_DHE_RSA_WITH_DES_CBC_SHA            EDH-RSA-DES-CBC-SHA
 TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA       EDH-RSA-DES-CBC3-SHA

 TLS_DH_anon_EXPORT_WITH_RC4_40_MD5      EXP-ADH-RC4-MD5
 TLS_DH_anon_WITH_RC4_128_MD5            ADH-RC4-MD5
 TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA   EXP-ADH-DES-CBC-SHA
 TLS_DH_anon_WITH_DES_CBC_SHA            ADH-DES-CBC-SHA
 TLS_DH_anon_WITH_3DES_EDE_CBC_SHA       ADH-DES-CBC3-SHA

AES ciphersuites from RFC3268, extending TLS v1.0

 TLS_RSA_WITH_AES_128_CBC_SHA            AES128-SHA
 TLS_RSA_WITH_AES_256_CBC_SHA            AES256-SHA

 TLS_DH_DSS_WITH_AES_128_CBC_SHA         DH-DSS-AES128-SHA
 TLS_DH_DSS_WITH_AES_256_CBC_SHA         DH-DSS-AES256-SHA
 TLS_DH_RSA_WITH_AES_128_CBC_SHA         DH-RSA-AES128-SHA
 TLS_DH_RSA_WITH_AES_256_CBC_SHA         DH-RSA-AES256-SHA

 TLS_DHE_DSS_WITH_AES_128_CBC_SHA        DHE-DSS-AES128-SHA
 TLS_DHE_DSS_WITH_AES_256_CBC_SHA        DHE-DSS-AES256-SHA
 TLS_DHE_RSA_WITH_AES_128_CBC_SHA        DHE-RSA-AES128-SHA
 TLS_DHE_RSA_WITH_AES_256_CBC_SHA        DHE-RSA-AES256-SHA

 TLS_DH_anon_WITH_AES_128_CBC_SHA        ADH-AES128-SHA
 TLS_DH_anon_WITH_AES_256_CBC_SHA        ADH-AES256-SHA


Additional Export 1024 and other cipher suites

Note: these ciphers can also be used in SSL v3.

 TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA     EXP1024-DES-CBC-SHA
 TLS_RSA_EXPORT1024_WITH_RC4_56_SHA      EXP1024-RC4-SHA
 TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA EXP1024-DHE-DSS-DES-CBC-SHA
 TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA  EXP1024-DHE-DSS-RC4-SHA
 TLS_DHE_DSS_WITH_RC4_128_SHA            DHE-DSS-RC4-SHA

SSL v2.0 cipher suites

 SSL_CK_RC4_128_WITH_MD5                 RC4-MD5
 SSL_CK_RC4_128_EXPORT40_WITH_MD5        EXP-RC4-MD5
 SSL_CK_RC2_128_CBC_WITH_MD5             RC2-MD5
 SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5    EXP-RC2-MD5
 SSL_CK_IDEA_128_CBC_WITH_MD5            IDEA-CBC-MD5
 SSL_CK_DES_64_CBC_WITH_MD5              DES-CBC-MD5
 SSL_CK_DES_192_EDE3_CBC_WITH_MD5        DES-CBC3-MD5

5. NOTES
--------
All DH modes are currently not supported by BSDftpd-ssl.

The non-ephemeral DH modes are currently unimplemented in OpenSSL
because there is no support for DH certificates.

Some compiled versions of OpenSSL may not include all the ciphers
listed here because some ciphers were excluded at compile time.

6. EXAMPLES
-----------
Enable all OpenSSL ciphers including NULL ciphers:

 ftps -z cipher=ALL:eNULL

Include only DES ciphers except export encryption algorithms then sort by
strength:

 ftps -z cipher=DES:\!EXP:@STRENGTH
